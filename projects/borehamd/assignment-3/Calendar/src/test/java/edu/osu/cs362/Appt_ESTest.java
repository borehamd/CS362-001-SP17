/*
 * This file was automatically generated by EvoSuite
 * Mon May 15 07:47:31 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;

import org.junit.runner.RunWith;

public class Appt_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(4, 4, 4, 4, 4, "", "");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t4/4/4 at 4:4am ,, \n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, (-722), (-2332), "", "");
      assertEquals(-722, appt0.getStartMonth());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(23, appt0.getStartHour());
      assertEquals(-2332, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "=* :=_\f$U%xG", (String) null);
      appt0.setStartDay(0);
      boolean boolean0 = appt0.getValid();
      assertEquals(0, appt0.getStartDay());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-2796), 0, (-2796), "", "");
      appt0.getTitle();
      assertEquals(-2796, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-2796, appt0.getStartDay());
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 2105, 0, "lv", "}XUOCkIx");
      int int0 = appt0.getStartYear();
      assertEquals("lv", appt0.getTitle());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMinute());
      assertEquals(2105, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals("}XUOCkIx", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(0, 6, 31, 2165, 0, "+T~yq#Pb0ouu]", "");
      appt0.setStartYear((-977));
      int int0 = appt0.getStartYear();
      assertEquals((-977), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 27, 27, "vT", "vT");
      assertEquals(27, appt0.getStartMonth());
      
      appt0.setStartMonth(0);
      int int0 = appt0.getStartMonth();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "", "");
      int int0 = appt0.getStartMinute();
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt((-79), (-79), (-79), (-1591), (-1591), "Trc`c3mv3qC", "Trc`c3mv3qC");
      int int0 = appt0.getStartMinute();
      assertEquals(-1591, appt0.getStartYear());
      assertEquals(-79, appt0.getStartHour());
      assertEquals((-79), int0);
      assertEquals("Trc`c3mv3qC", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals("Trc`c3mv3qC", appt0.getDescription());
      assertEquals(-79, appt0.getStartDay());
      assertEquals(-1591, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(12, 59, 0, (-1476), 12, "", "");
      int int0 = appt0.getStartHour();
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(59, appt0.getStartMinute());
      assertEquals(12, int0);
      assertEquals(-1476, appt0.getStartMonth());
      assertEquals(12, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, (-1241), "Y+", " at ");
      int int0 = appt0.getStartDay();
      assertEquals(0, int0);
      assertEquals("Y+", appt0.getTitle());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-1241, appt0.getStartYear());
      assertEquals(" at ", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "=* :=_\f$U%xG", (String) null);
      int int0 = appt0.getStartDay();
      assertEquals("", appt0.getDescription());
      assertTrue(appt0.getValid());
      assertEquals(11, int0);
      assertEquals("=* :=_\f$U%xG", appt0.getTitle());
      assertEquals(11, appt0.getStartYear());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(11, appt0.getStartHour());
      assertEquals(11, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt((-1493), (-1493), (-1493), (-1493), (-1493), "Lc(!11xR;=bCj=", "Lc(!11xR;=bCj=");
      String string0 = appt0.getDescription();
      assertEquals(-1493, appt0.getStartHour());
      assertEquals(-1493, appt0.getStartYear());
      assertEquals(-1493, appt0.getStartMinute());
      assertEquals(-1493, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(-1493, appt0.getStartMonth());
      assertEquals("Lc(!11xR;=bCj=", string0);
      assertEquals("Lc(!11xR;=bCj=", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt((-27), (-27), (-27), (-27), (-27), "uR", "uR");
      appt0.setDescription("uR");
      assertEquals(-27, appt0.getStartDay());
      assertEquals("uR", appt0.getDescription());
      assertEquals("uR", appt0.getTitle());
      assertEquals(-27, appt0.getStartMonth());
      assertEquals(-27, appt0.getStartHour());
      assertEquals(-27, appt0.getStartYear());
      assertEquals(-27, appt0.getStartMinute());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt((-24), (-24), (-24), (-24), (-24), ">)B", ">)B");
      appt0.setTitle(">)B");
      assertEquals(-24, appt0.getStartYear());
      assertEquals(-24, appt0.getStartMonth());
      assertEquals(-24, appt0.getStartMinute());
      assertEquals(-24, appt0.getStartHour());
      assertEquals(">)B", appt0.getTitle());
      assertEquals(-24, appt0.getStartDay());
      assertEquals(">)B", appt0.getDescription());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt((-1190), (-1190), (-1190), (-1190), 23, "8q!&IuP.?s>RuY", (String) null);
      assertEquals("8q!&IuP.?s>RuY", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertEquals(-1190, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "][", "][");
      String string0 = appt0.toString();
      assertEquals("\t12/12/12 at 12:12pm ,][, ][\n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "=* :=_\f$U%xG", (String) null);
      String string0 = appt0.toString();
      assertEquals("\t11/11/11 at 11:11am ,=* :=_\f$U%xG, \n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 1, 1, "Y<^<%%mRTIoTv", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(1, appt0.getStartMonth());
      assertEquals(1, appt0.getStartYear());
      assertEquals(1, appt0.getStartHour());
      assertEquals("Y<^<%%mRTIoTv", appt0.getTitle());
      assertEquals(1, appt0.getStartDay());
      assertEquals("", appt0.getDescription());
      assertTrue(boolean0);
      assertEquals(1, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt(0, 3559, (-1), 3559, 0, (String) null, (String) null);
      appt0.setDescription((String) null);
      assertFalse(appt0.getValid());
      assertEquals(-1, appt0.getStartDay());
      assertEquals(3559, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals(3559, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt(3, (-1), 3, (-1), 3, "", "");
      assertEquals(-1, appt0.getStartMinute());
      assertEquals(3, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(3, appt0.getStartHour());
      assertEquals(-1, appt0.getStartMonth());
      assertEquals(3, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(2878, 2878, 1227, 2878, 1227, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(2878, int0);
      assertEquals(1227, appt0.getStartYear());
      assertEquals(1227, appt0.getStartDay());
      assertEquals(2878, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(2878, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt((-23), (-23), (-23), (-23), (-23), "%1yE{n7vPpiFG", "%1yE{n7vPpiFG");
      String string0 = appt0.getTitle();
      assertEquals(-23, appt0.getStartDay());
      assertEquals("%1yE{n7vPpiFG", appt0.getDescription());
      assertEquals(-23, appt0.getStartYear());
      assertEquals(-23, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-23, appt0.getStartHour());
      assertEquals("%1yE{n7vPpiFG", string0);
      assertEquals(-23, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt((-397), (-397), (-1024), (-397), 1853, "", "");
      int int0 = appt0.getStartYear();
      assertEquals(-397, appt0.getStartHour());
      assertEquals(-397, appt0.getStartMonth());
      assertEquals(1853, int0);
      assertEquals(-1024, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(-397, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-3707), 0, 0, "/", "/");
      int int0 = appt0.getStartDay();
      assertEquals((-3707), int0);
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("/", appt0.getDescription());
      assertEquals("/", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-2796), 0, (-2796), "", "");
      int int0 = appt0.getStartHour();
      assertEquals(0, int0);
      assertEquals(-2796, appt0.getStartDay());
      assertEquals(-2796, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt((-397), (-397), (-1024), (-397), 1853, "", "");
      appt0.setStartMinute((-397));
      assertEquals(1853, appt0.getStartYear());
      assertEquals(-1024, appt0.getStartDay());
      assertEquals(-397, appt0.getStartMonth());
      assertEquals(-397, appt0.getStartMinute());
      assertEquals(-397, appt0.getStartHour());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "", "");
      appt0.getDescription();
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt((-789), (-789), 0, (-2110), 0, ",2e&", ",2e&");
      int int0 = appt0.getStartMonth();
      assertEquals(0, appt0.getStartDay());
      assertEquals(",2e&", appt0.getTitle());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-789, appt0.getStartMinute());
      assertEquals(",2e&", appt0.getDescription());
      assertEquals(-789, appt0.getStartHour());
      assertEquals((-2110), int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-2796), 0, (-2796), "", "");
      appt0.setStartDay(561);
      assertEquals(561, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-2796), 0, (-2796), "", "");
      assertEquals(0, appt0.getStartHour());
      
      appt0.setStartHour((-2796));
      int int0 = appt0.getStartHour();
      assertEquals((-2796), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt((-397), (-397), (-1024), (-397), 1853, "", "");
      String string0 = appt0.toString();
      assertEquals(-397, appt0.getStartHour());
      assertEquals(-397, appt0.getStartMinute());
      assertEquals(-397, appt0.getStartMonth());
      assertEquals(-1024, appt0.getStartDay());
      assertNull(string0);
      assertEquals(1853, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt((-644), 845, 845, 1, 1740, "", "");
      int int0 = appt0.getStartMinute();
      assertEquals(845, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(845, int0);
      assertEquals(1, appt0.getStartMonth());
      assertEquals(-644, appt0.getStartHour());
      assertEquals(1740, appt0.getStartYear());
  }
}
